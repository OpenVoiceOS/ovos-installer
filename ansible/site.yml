---
- name: Open Voice OS Installer
  hosts: localhost
  connection: local
  gather_facts: false
  user: "{{ ovos_installer_user }}"
  become: true

  vars:
    ovos_installer_reboot: false
    # Just a simple JSON sanitize
    ovos_installer_i2c_devices: "{{ ovos_installer_i2c_devices | from_json }}"

  pre_tasks:
    - name: Gather reduced subset of facts
      ansible.builtin.setup:
        gather_subset:
          - "hardware"
          - "interfaces"
      tags:
        - always

  roles:
    - role: ovos_hardware_mark1
      when:
        - ansible_distribution == "Debian"
        - "'atmega328p' in ovos_installer_i2c_devices"
        - ansible_architecture == "aarch64"
        - ansible_distribution_major_version is version('11', '>=')

    - role: ovos_hardware_mark2
      when:
        - ansible_distribution == "Debian"
        - "'tas5806' in ovos_installer_i2c_devices"
        - ansible_architecture == "aarch64"
        - ansible_distribution_major_version is version('11', '>=')
        - "'Raspberry Pi 4' in ovos_installer_raspberrypi or 'Raspberry Pi 5' in ovos_installer_raspberrypi"

    - role: ovos_installer

  tasks:
    - name: Checking for reboot requirement
      ansible.builtin.file:
        path: "{{ ovos_installer_reboot_file_path }}"
        state: touch
        owner: root
        group: root
        mode: "0644"
      when: ovos_installer_reboot | bool

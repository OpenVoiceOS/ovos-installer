---
- name: Install PipeWire with ALSA support
  vars:
    # Debian Unstable hack
    _distribution_version: "{{ '99' if ansible_distribution == 'Debian' and ansible_distribution_version == 'n/a' else ansible_distribution_version }}"
  ansible.builtin.package:
    name:
      - "{{ 'pipewire-alsa' if ansible_distribution not in ['Linux Mint', 'Zorin OS'] else 'pipewire' }}"
      - alsa-utils
  register: _pipewire_install
  when:
    not (ansible_distribution == 'Ubuntu' and _distribution_version is version('23.04', '<=') or
    ansible_distribution == 'Debian' and _distribution_version is version('12.0', '<='))

- name: Install PulseAudio on older Debian and Ubuntu versions
  vars:
    # Debian Unstable hack
    _distribution_version: "{{ '99' if ansible_distribution == 'Debian' and ansible_distribution_version == 'n/a' else ansible_distribution_version }}"
  ansible.builtin.apt:
    name:
      - pulseaudio
      - alsa-utils
  register: ovos_installer_pulseaudio_install
  when:
    (ansible_distribution == 'Ubuntu' and _distribution_version is version('23.04', '<=') or
    ansible_distribution == 'Debian' and _distribution_version is version('12.0', '<='))

- name: Determine available groups
  ansible.builtin.getent:
    database: group

- name: Add {{ ovos_installer_user }} to audio group
  ansible.builtin.user:
    name: "{{ ovos_installer_user }}"
    groups:
      - audio
    append: true

- name: Add {{ ovos_installer_user }} to rtkit group
  ansible.builtin.user:
    name: "{{ ovos_installer_user }}"
    groups:
      - rtkit
    append: true
  when: "'rtkit' in ansible_facts.getent_group"

- name: Add {{ ovos_installer_user }} to pipewire group
  vars:
    # Debian Unstable hack
    _distribution_version: "{{ '99' if ansible_distribution == 'Debian' and ansible_distribution_version == 'n/a' else ansible_distribution_version }}"
  ansible.builtin.user:
    name: "{{ ovos_installer_user }}"
    groups: pipewire
    append: true
  when:
    - not (ansible_distribution == 'Ubuntu' and _distribution_version is version('23.04', '<=') or ansible_distribution == 'Debian' and _distribution_version is version('12.0', '<='))
    - ansible_os_family != "Suse"
    - ansible_os_family != "Archlinux"
    - ansible_distribution != "Linux Mint"
    - ansible_distribution != "Zorin OS"
    - ansible_os_family != "openSUSE Tumbleweed-Slowroll"

- name: Enable lingering for {{ ovos_installer_user }}
  ansible.builtin.file:
    path: "/var/lib/systemd/linger/{{ ovos_installer_user }}"
    owner: root
    group: root
    mode: "0644"
    modification_time: preserve
    access_time: preserve
    state: touch
  notify: Start Sound Server

- name: Flush handlers sound
  ansible.builtin.meta: flush_handlers

- name: Re-detect sound server
  ansible.builtin.shell:
    cmd: |
      if pgrep -x "pipewire-pulse$" &>/dev/null; then
        echo "pipewire"
      elif pgrep -x "pulseaudio$" &>/dev/null; then
        echo "pulseaudio"
      elif pgrep -x "pipewire$" &>/dev/null; then
        echo "pipewire"
      else
        if [[ "{{ ansible_kernel }}" =~ "microsoft" ]]; then
          echo "pulseaudio"
        else
          echo "n/a"
        fi
      fi
    executable: /bin/bash
  register: ovos_installer_detect_sound_server
  changed_when: false

- name: Generate {{ ovos_installer_user_home }}/.asoundrc file based on detected sound server (Raspberry Pi boards only)
  ansible.builtin.copy:
    content: |
      pcm.!default {{ ovos_installer_detect_sound_server.stdout }}
      ctl.!default {{ ovos_installer_detect_sound_server.stdout }}
    dest: "{{ ovos_installer_user_home }}/.asoundrc"
    owner: "{{ ovos_installer_user }}"
    group: "{{ ovos_installer_group }}"
    mode: "0644"
    backup: true
  when: ovos_installer_raspberrypi != "N/A"

- name: Remove {{ ovos_installer_user_home }}/.asoundrc file
  ansible.builtin.file:
    path: "{{ ovos_installer_user_home }}/.asoundrc"
    state: absent
  when: ovos_installer_cleaning | bool
  tags:
    - uninstall

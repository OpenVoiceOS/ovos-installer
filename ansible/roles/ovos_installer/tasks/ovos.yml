---
- name: Define directories to backup before uninstall
  ansible.builtin.set_fact:
    ovos_directories_backup:
      - "{{ ovos_installer_user_home }}/ovos/*"
      - "{{ ovos_installer_user_home }}/hivemind/*"
      - "{{ ovos_installer_user_home }}/.config/systemd/user/*"
      - "{{ ovos_installer_user_home }}/.config/mycroft/*"
      - "{{ ovos_installer_user_home }}/.config/hivemind/*"
      - "{{ ovos_installer_user_home }}/.config/OpenVoiceOS/*"
      - "{{ ovos_installer_user_home }}/.config/ovos_persona/*"
      - "{{ ovos_installer_user_home }}/.config/wireplumber/*"
      - "{{ ovos_installer_user_home }}/.local/share/hivemind/*"
      - "{{ ovos_installer_user_home }}/.local/state/ovos/*"
      - "{{ ovos_installer_user_home }}/.local/state/mycroft/*"
  when: ovos_installer_cleaning | bool
  tags:
    - uninstall

- name: Check if directory to backup exists
  ansible.builtin.stat:
    path: "{{ ovos_directories_backup }}"
  register: _ovos_installer_directory_exists
  when: ovos_installer_cleaning | bool
  tags:
    - uninstall

- name: Backup existing configurations before uninstall
  community.general.archive:
    path: "{{ ovos_directories_backup }}"
    dest: "{{ ovos_installer_user_home }}/ovos-backup.tar.gz"
    owner: "{{ ovos_installer_user }}"
    group: "{{ ovos_installer_group }}"
    mode: "0755"
    format: gz
    force_archive: true
  when:
    - ovos_installer_cleaning | bool
    - _ovos_installer_directory_exists.stat.exists | bool
  tags:
    - uninstall

- name: Create directories
  ansible.builtin.file:
    path: "{{ item.directory }}"
    owner: "{{ ovos_installer_user }}"
    group: "{{ ovos_installer_group }}"
    mode: "0755"
    state: directory
  loop:
    - {
        "directory": "{{ ovos_installer_user_home }}/.config/systemd/user",
        "status": true,
      }
    - {"directory": "{{ ovos_installer_user_home }}/ovos", "status": true}
    - {
        "directory": "{{ ovos_installer_user_home }}/ovos/config",
        "status": true,
      }
    - {
        "directory": "{{ ovos_installer_user_home }}/ovos/config/persona",
        "status": true,
      }
    - {
        "directory": "{{ ovos_installer_user_home }}/ovos/config/phal",
        "status": true,
      }
    - {"directory": "{{ ovos_installer_user_home }}/ovos/share", "status": true}
    - {"directory": "{{ ovos_installer_user_home }}/ovos/tmp", "status": true}
    - {
        "directory": "{{ ovos_installer_user_home }}/hivemind",
        "status": "{{ 'false' if (ovos_installer_profile == 'ovos' and ovos_installer_profile == 'server') else 'true' }}",
      }
    - {
        "directory": "{{ ovos_installer_user_home }}/hivemind/config",
        "status": "{{ 'false' if (ovos_installer_profile == 'ovos' and ovos_installer_profile == 'server') else 'true' }}",
      }
    - {
        "directory": "{{ ovos_installer_user_home }}/hivemind/share",
        "status": "{{ 'false' if (ovos_installer_profile == 'ovos' and ovos_installer_profile == 'server') else 'true' }}",
      }
  when:
    - item.status | bool
    - ovos_installer_method == "containers"

- name: Create directories
  ansible.builtin.file:
    path: "{{ item.directory }}"
    owner: "{{ ovos_installer_user }}"
    group: "{{ ovos_installer_group }}"
    mode: "0755"
    state: directory
  loop:
    - {
        "directory": "{{ ovos_installer_user_home }}/.config/mycroft",
        "status": true,
      }
    - {
        "directory": "{{ ovos_installer_user_home }}/.config/ovos_persona",
        "status": true,
      }
    - {"directory": "{{ ovos_installer_user_home }}/.local", "status": true}
    - {"directory": "{{ ovos_installer_user_home }}/.local/bin", "status": true}
    - {
        "directory": "{{ ovos_installer_user_home }}/.config/hivemind",
        "status": "{{ 'false' if ovos_installer_profile == 'ovos' else 'true' }}",
      }
    - {
        "directory": "{{ ovos_installer_user_home }}/.config/systemd/user",
        "status": true,
      }
    - {"directory": "{{ ovos_installer_user_home }}/nltk_data", "status": true}
  when:
    - item.status | bool
    - ovos_installer_method == "virtualenv"

- name: Generate mycroft.conf
  vars:
    _configuration_path: "{{ '.config/mycroft' if ovos_installer_method == 'virtualenv' else 'ovos/config' }}"
  ansible.builtin.template:
    src: mycroft.conf.j2
    dest: "{{ ovos_installer_user_home }}/{{ _configuration_path }}/mycroft.conf"
    owner: "{{ ovos_installer_user }}"
    group: "{{ ovos_installer_group }}"
    mode: "0600"
    backup: true
  register: ovos_installer_configuration

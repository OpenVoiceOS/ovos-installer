---
- name: Add {{ ovos_installer_user }} to video and render groups
  ansible.builtin.user:
    name: "{{ ovos_installer_user }}"
    groups: audio
    append: true
  loop:
    - video
    - render

- name: EGLFS requirements when running on Raspberry Pi 5
  vars:
    _configuration_path: "{{ '.config' if ovos_installer_method == 'virtualenv' else 'ovos/config' }}"
  ansible.builtin.copy:
    content: |
      {
        "device": "/dev/dri/card1",
        "hwcursor": false
      }
    dest: "{{ ovos_installer_user_home }}/{{ _configuration_path }}/ovos-eglfs.json"
    owner: "{{ ovos_installer_user }}"
    group: "{{ ovos_installer_group }}"
    mode: "0600"
  when: "'Raspberry Pi 5' in ovos_installer_raspberrypi and ovos_installer_display_server == 'N/A'"

- name: Block DISPLAY server & Wayland socket
  when: ovos_installer_display_server != "N/A"
  block:
    # The find module doesn't support the socket type and it could generate a
    # "permission denied" error depending the content of /run/user/UID
    - name: Check for wayland socket
      ansible.builtin.shell:
        cmd: |
          set -e -o pipefail
          ls -1 /run/user/{{ ovos_installer_uid }} | grep -E '^wayland-[0-9]$'
        executable: /bin/bash
      register: ovos_installer_ovos_wayland_display
      changed_when: false
      when: ovos_installer_display_server == 'wayland'

    - name: Set ovos_installer_wayland_display fact
      ansible.builtin.set_fact:
        ovos_installer_wayland_display: "{{ ovos_installer_ovos_wayland_display.stdout }}"
      when:
        - ovos_installer_ovos_wayland_display is defined
        - ovos_installer_display_server == 'wayland'

    - name: Detect DISPLAY server number
      ansible.builtin.shell:
        cmd: |
          set -o pipefail

          # From process environments; pick the most frequent value
          env_choice=$(
            grep -zsoh '^DISPLAY=:[0-9]\(\.[0-9]\+\)\?' /proc/*/environ 2>/dev/null \
            | tr '\0' '\n' \
            | sed 's/^DISPLAY=//' \
            | awk 'NF{c[$0]++} END{m=0;b=""; for (k in c) if (c[k]>m){m=c[k]; b=k}; if (b!="") print b}'
          )

          if [ -n "$env_choice" ]; then
            printf '%s\n' "$env_choice"
            exit 0
          fi

          # Fallback: infer from X11 sockets (rarely needed)
          if [ -d /tmp/.X11-unix ]; then
            ls -1 /tmp/.X11-unix 2>/dev/null \
              | sed -n 's/^X\([0-9]\+\)$/:\1/p' \
              | sort -u \
              | head -n 1
          fi
        executable: /bin/bash
      register: ovos_installer_ovos_display_server_number
      changed_when: false

    - name: Set ovos_installer_display_server_number fact
      ansible.builtin.set_fact:
        ovos_installer_display_server_number: "{{ ovos_installer_ovos_display_server_number.stdout }}"
      when: ovos_installer_ovos_display_server_number.stdout | length > 0
